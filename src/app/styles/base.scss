@use 'sass:math';
@use 'sass:color';
@use './variables' as *;
@use './mixin' as *;
@use './3d-effects' as *;

.fixed-controls {
  position: fixed;
  top: 25px;
  right: 25px;
  display: flex;
  flex-direction: column;
  gap: 10px;
  
  @include down-lg {
    top: 5px;
    right: 3px;
  }
}

.pp-section {
  height: 100vh;
  background: $px-bg-1;
  .theme-light & {
    background: $px-white;
  }
}

.section {
  padding: 100px 0;
  @include down-sm {
    padding-bottom: 60px;
  }
}

.pp-scrollable {
  overflow: auto;
}

.media {
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;
}

.embed-responsive {
  position: relative;
  display: block;
  width: 100%;
  padding: 0;
  overflow: hidden;
}

.embed-responsive::before {
  display: block;
  content: '';
}

.embed-responsive .embed-responsive-item,
.embed-responsive iframe {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 0;
}

.embed-responsive-21by9::before {
  padding-top: 42.857143%;
}

/* COLOR SWITCH */
.color_switch,
.back-btn {
  position: fixed;
  width: 50px;
  height: 50px;
  line-height: 50px;
  text-align: center;
  font-size: 20px;
  border-radius: 50%;
  z-index: 1100;
  cursor: pointer;
  border: 1px solid transparent;
  transition: all 0.3s ease;
  
  // Add 3D floating effects
  @include floating-3d(3px, 0.15);
  @include responsive-3d-effects;

  &:focus-visible {
    outline: 3px solid $px-theme;
    outline-offset: 2px;
    transform: scale(1.1);
  }

  @include down-md {
    width: 40px;
    height: 40px;
    line-height: 40px;
  }
}

.color_switch {
  top: 25px;
  right: 25px;
  background: #fff;
  color: #0b0b13;
  
  @include down-lg {
    top: 71px;
    right: 13px;
  }
  
  .theme-light & {
    background: #0b0b13;
    color: #fff;
  }
}

.back-btn {
  top: 35px;
  right: 25px;
  background: $px-white;
  color: $px-dark;
  
  @include down-lg {
    top: 80px;
    right: 13px;
  }
  
  .theme-light & {
    background: $px-dark;
    color: $px-white;
  }
}

/* TITLE */
.title {
  margin-bottom: 35px;
  @include down-sm {
    margin-bottom: 25px;
  }
  h3 {
    color: $px-white;
    margin: 0;
    position: relative;
    z-index: 1;
    font-weight: 300;
    font-size: 30px;
    display: inline-block;
    vertical-align: top;
    text-transform: uppercase;
    letter-spacing: 6px;
    
    // Add 3D text shadow effect
    @include text-3d-shadow(2px, 1px);
    @include responsive-3d-effects;
    
    @include down-sm {
      letter-spacing: 2px;
    }
    .theme-light & {
      color: $px-dark;
    }
    &:after {
      content: '';
      width: 6px;
      height: 6px;
      border-radius: 50%;
      position: absolute;
      bottom: -7px;
      left: 56px;
      right: 0;
      z-index: -1;
      background: $px-theme;
    }
    &:before {
      content: '';
      position: absolute;
      height: 1px;
      bottom: -5px;
      left: 0;
      right: 0;
      width: 60px;
      background: $px-theme;
    }
  }
}

/* SEPARATOR */
.separator {
  padding-top: 80px;
  padding-bottom: 80px;
  position: relative;
  &:after {
    content: '';
    height: 1px;
    background: $px-white;
    opacity: 0.1;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;
    .theme-light & {
      background-color: $px-dark;
    }
  }
  @include down-md {
    padding-top: 80px;
    padding-bottom: 80px;
  }
  @include down-sm {
    padding-top: 60px;
    padding-bottom: 60px;
  }
}

/* SLIDER PAGINATION */
.owl-dots {
  text-align: center;
  .owl-dot {
    display: inline-block;
    vertical-align: top;
    width: 10px;
    height: 10px;
    background: transparent;
    border: 1px solid $px-white;
    @include transition(ease all 0.55s);
    border-radius: 50%;
    margin: 0 5px;
    .theme-light & {
      border-color: $px-dark;
    }
    &.active {
      background: $px-white;
      .theme-light & {
        background: $px-dark;
      }
    }
  }
}

/* BUTTON */
.px-btn {
  padding: 0 25px;
  line-height: 42px;
  position: relative;
  display: inline-block;
  background: none;
  border: 1px solid transparent;
  font-size: 14px;
  font-weight: 400;
  letter-spacing: 2px;
  text-decoration: none;
  @include transition(ease all 0.4s);
  border-radius: 4px;
  
  // Add 3D button press effect
  @include button-3d-press(3px, 5px);
  @include responsive-3d-effects;
  
  &.px-btn-theme {
    background: $px-theme;
    color: #000000;
    font-weight: 500;
    box-shadow: 4px 4px $px-white;
    .theme-light & {
      box-shadow: 4px 4px $px-dark;
    }
    &:not(:disabled):hover {
      background: $px-white;
      color: $px-theme;
      box-shadow: 4px 4px $px-theme;
      .theme-light & {
        background: $px-dark;
        color: $px-theme;
      }
    }
  }

  &.px-btn-regular {
    background: $px-theme;
    color: #000000;
    font-weight: 500;
    &:not(:disabled):hover {
      background: $px-white;
      color: $px-theme;
      .theme-light & {
        background: $px-dark;
        color: $px-theme;
      }
    }
  }

  &:disabled {
    background: #ccc;
    color: #666;
    box-shadow: none;
    cursor: not-allowed;
    border-color: #bbb;
    box-shadow: 4px 4px $px-white;
    .theme-light & {
      box-shadow: 4px 4px $px-dark;
    }
  }
}

/* PARTICLES */
.particles {
  position: absolute;
  inset: 0;
  opacity: 0.3;
  .theme-light & {
    opacity: 0.3;
    filter: invert(1);
  }
}

/* GLITCH EFFECT */
.glitch {
  position: relative;
  animation: glitch-skew 1s infinite linear alternate-reverse;
  &::before {
    @include glitchCopy;
    left: 2px;
    text-shadow: -2px 0 $px-pink-comp;
    clip: rect(44px, 450px, 50px, 0);
    animation: glitch-anim 5s infinite linear alternate-reverse;
    .theme-light & {
      text-shadow: -2px 0 $px-pink;
    }
  }
  &::after {
    @include glitchCopy;
    left: -2px;
    text-shadow:
      -2px 0 $px-teal-comp,
      2px 2px $px-pink-comp;
    animation: glitch-anim 1s infinite linear alternate-reverse;
    .theme-light & {
      text-shadow:
        -2px 0 $px-teal,
        2px 2px $px-pink;
    }
  }
}

@keyframes glitch-anim {
  $steps: 20;
  @for $i from 0 through $steps {
    #{math.percentage($i*math.div(1, $steps))} {
      clip: rect(math.random(100) * 1px, 9999px, math.random(100) * 1px, 0);
      transform: skew((math.random(100) * 0.01) * 1deg);
    }
  }
}

@keyframes glitch-skew {
  $steps: 10;
  @for $i from 0 through $steps {
    #{math.percentage($i*math.div(1, $steps))} {
      transform: skew((math.random(10) - 5) + deg);
    }
  }
}
